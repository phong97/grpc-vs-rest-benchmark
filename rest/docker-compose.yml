services:
  backend1:
    build:
      context: ./rest-backend-project
    container_name: rest_backend1
    deploy:
      resources:
        limits:
          memory: 1g
    networks:
      - rest_backend_net

  backend2:
    build:
      context: ./rest-backend-project
    container_name: rest_backend2
    deploy:
      resources:
        limits:
          memory: 1g
    networks:
      - rest_backend_net

  nginx:
    image: nginx:latest
    container_name: nginx_lb
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8081:8081"
    depends_on:
      - backend1
      - backend2
    networks:
      - rest_backend_net

  # --- Prometheus ---
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_rest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - rest_backend_net

  # --- Grafana ---
  grafana:
    image: grafana/grafana:latest
    container_name: grafana_rest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - rest_backend_net

networks:
  rest_backend_net:
    driver: bridge

volumes:
  grafana_data:
